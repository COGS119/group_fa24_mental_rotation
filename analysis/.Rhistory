ggplot(aes(x = angle, y = errorRate)) +
geom_point(color = "blue", size = 2) +
geom_errorbar(
aes(ymin = errorRate - seErrorRate, ymax = errorRate + seErrorRate),
width = 0.2,
color = "black"
) +
coord_cartesian(ylim = c(0, 30)) +
scale_y_continuous(
breaks = seq(from = 0, to = 30, by = 2),
labels = seq(from = 0, to = 30, by = 2),
expand = c(0, 0)
) +
labs(
title = "Error Rate across Angles",
y = "Error Rate (%)",
x = "Angle (deg)"
) +
geom_smooth(
method = "lm",
se = FALSE,
color = "black",
linetype = "dotted"
) +
theme_bw()
processed_data %>%
mutate(
across(
starts_with("response_"),
~ case_when(
. == "No image at all, I only 'know' I am thinking of the object" ~ 0,
. == "Dim and vague image" ~ 1,
. == "Moderatley realistic and vivid" ~ 2,
. == "Realistic and reasonably vivid" ~ 3,
. == "Perfectly realistic, as vivid as real seeing" ~ 4,
TRUE ~ NA_real_  # Handle unexpected cases
)
)
)
processed_data %>%
mutate(
across(
starts_with("response_"),
~ case_when(
. == "No image at all, you only “know” that you are thinking of the object" ~ 0,
. == "Dim and vague; flat" ~ 1,
. == "Moderately clear and lively" ~ 2,
. == "Clear and lively" ~ 3,
. == "Perfectly clear and lively as real seeing" ~ 4,
TRUE ~ NA_real_  # Handle unexpected cases
)
)
)
VVIQAnalyses = processed_data %>%
mutate(
across(
starts_with("response_"),
~ case_when(
. == "No image at all, you only “know” that you are thinking of the object" ~ 0,
. == "Dim and vague; flat" ~ 1,
. == "Moderately clear and lively" ~ 2,
. == "Clear and lively" ~ 3,
. == "Perfectly clear and lively as real seeing" ~ 4,
TRUE ~ NA_real_)))
VVIQAnalyses
select(is.na(starts_with("response_"))
VVIQAnalyses %>%
VVIQAnalyses %>%
select(starts_with("response_")) %>%  #
is.na()
processed_data %>%
mutate(
across(
starts_with("response_"),
~ case_when(
. == "No image at all, you only “know” that you are thinking of the object" ~ 0,
. == "Dim and vague; flat" ~ 1,
. == "Moderately clear and lively" ~ 2,
. == "Clear and lively" ~ 3,
. == "Perfectly clear and lively as real seeing" ~ 4,
TRUE ~ NA_real_))) %>%
mutate(VVIQRaw = rowSums(across(starts_with("response_")), na.rm = TRUE))
processed_data %>%
mutate(
across(
starts_with("response_"),
~ case_when(
. == "No image at all, you only “know” that you are thinking of the object" ~ 0,
. == "Dim and vague; flat" ~ 1,
. == "Moderately clear and lively" ~ 2,
. == "Clear and lively" ~ 3,
. == "Perfectly clear and lively as real seeing" ~ 4,
TRUE ~ NA_real_))) %>%
mutate(VVIQRaw = rowSums(across(starts_with("response_")), na.rm = TRUE)) %>% select(VVIQRaw)
processed_data %>%
mutate(
across(
starts_with("response_"),
~ case_when(
. == "No image at all, you only “know” that you are thinking of the object" ~ 1,
. == "Dim and vague; flat" ~ 2,
. == "Moderately clear and lively" ~ 3,
. == "Clear and lively" ~ 4,
. == "Perfectly clear and lively as real seeing" ~ 5,
TRUE ~ NA_real_))) %>%
mutate(VVIQRaw = rowSums(across(starts_with("response_")), na.rm = TRUE)) %>% select(VVIQRaw)
VVIQData = processed_data %>%
mutate(
across(
starts_with("response_"),
~ case_when(
. == "No image at all, you only “know” that you are thinking of the object" ~ 1,
. == "Dim and vague; flat" ~ 2,
. == "Moderately clear and lively" ~ 3,
. == "Clear and lively" ~ 4,
. == "Perfectly clear and lively as real seeing" ~ 5,
TRUE ~ NA_real_))) %>%
mutate(VVIQRaw = rowSums(across(starts_with("response_")), na.rm = TRUE))
VVIQData %>%
ggplot(aes(x = VVIQRaw, y = rt)) +
stat_summary(
fun = mean,
geom = "point",
color = "black",
size = 3
) +
stat_summary(
fun.data = mean_se, # Automatically calculates mean and SE
geom = "pointrange",
color = "black",
shape = 21,
size = 0.5
) +
coord_cartesian(ylim = c(0,5000)) +
scale_y_continuous(breaks = seq(from = 0, to = 5000, by = 500),
labels = seq(from = 0, to = 5000, by = 500),
expand = c(0,0)) +
labs(title = "Reaction Time across Angles",
y = "Response Time (ms)",
x = "VVIQ") +
geom_smooth(method="lm", se = FALSE, color = "black", linetype = "dotted") +
theme_bw()
VVIQData %>%
ggplot(aes(x = VVIQRaw, y = rt)) +
stat_summary(
fun = mean,
geom = "point",
color = "black",
size = 3
) +
stat_summary(
fun.data = mean_se, # Automatically calculates mean and SE
geom = "pointrange",
color = "black",
shape = 21,
size = 0.5
) +
scale_y_continuous(breaks = seq(from = 0, to = 5000, by = 500),
labels = seq(from = 0, to = 5000, by = 500),
expand = c(0,0)) +
labs(title = "Reaction Time across Angles",
y = "Response Time (ms)",
x = "VVIQ") +
geom_smooth(method="lm", se = FALSE, color = "black", linetype = "dotted") +
theme_bw()
VVIQData %>%
ggplot(aes(x = VVIQRaw, y = rt)) +
stat_summary(
fun = mean,
geom = "point",
color = "black",
size = 3
) +
stat_summary(
fun.data = mean_se, # Automatically calculates mean and SE
geom = "pointrange",
color = "black",
shape = 21,
size = 0.5
)
VVIQData %>%
ggplot(aes(x = VVIQRaw, y = rt)) +
stat_summary(
fun = mean,
geom = "point",
color = "black",
size = 3
) +
stat_summary(
fun.data = mean_se, # Automatically calculates mean and SE
geom = "pointrange",
color = "black",
shape = 21,
size = 0.5
) +
labs(title = "Reaction Time across Angles",
y = "Response Time (ms)",
x = "VVIQ") +
geom_smooth(method="lm", se = FALSE, color = "black", linetype = "dotted") +
theme_bw()
VVIQData %>%
ggplot(aes(x = VVIQRaw, y = rt)) +
stat_summary(
fun = mean,
geom = "point",
color = "black",
size = 3
) +
stat_summary(
fun.data = mean_se, # Automatically calculates mean and SE
geom = "pointrange",
color = "black",
shape = 21,
size = 0.5
) +
labs(title = "Reaction Time across VVIQ scores",
y = "Response Time (ms)",
x = "VVIQ") +
geom_smooth(method="lm", se = FALSE, color = "black", linetype = "dotted") +
theme_bw()
VVIQData %>%
ggplot(aes(x = VVIQRaw, y = rt)) +
stat_summary(
fun = mean,
geom = "point",
color = "black",
size = 3
) +
stat_summary(
fun.data = mean_se, # Automatically calculates mean and SE
geom = "errorbar",
color = "black",
shape = 21,
size = 0.5
) +
labs(title = "Reaction Time across VVIQ scores",
y = "Response Time (ms)",
x = "VVIQ") +
geom_smooth(method="lm", se = FALSE, color = "black", linetype = "dotted") +
theme_bw()
VVIQData %>%
ggplot(aes(x = VVIQRaw, y = rt)) +
stat_summary(
fun = mean,
geom = "point",
color = "black",
size = 3
) +
stat_summary(
fun.data = mean_cl_boot, # Automatically calculates mean and SE
geom = "errorbar",
color = "black",
shape = 21,
size = 0.5
) +
labs(title = "Reaction Time across VVIQ scores",
y = "Response Time (ms)",
x = "VVIQ") +
geom_smooth(method="lm", se = FALSE, color = "black", linetype = "dotted") +
theme_bw()
VVIQData %>%
ggplot(aes(x = VVIQRaw, y = rt)) +
stat_summary(
fun = mean,
geom = "point",
color = "black",
size = 3
) +
stat_summary(
fun.data = mean_se, # Automatically calculates mean and SE
geom = "errorbar",
color = "black",
shape = 21,
size = 0.5
) +
labs(title = "Reaction Time across VVIQ scores",
y = "Response Time (ms)",
x = "VVIQ") +
geom_smooth(method="lm", se = FALSE, color = "black", linetype = "dotted") +
theme_bw()
VVIQData %>%
ggplot(aes(x = VVIQRaw, y = rt)) +
stat_summary(
fun = mean,
geom = "point",
color = "black",
size = 3
) +
stat_summary(
fun.data = mean_se, # Automatically calculates mean and SE
geom = "errorbar",
color = "black",
shape = 21,
size = 0.5
) +
labs(title = "Reaction Time across VVIQ scores",
y = "Response Time (ms)",
x = "VVIQ") +
geom_smooth(method="lm", se = FALSE, color = "black", linetype = "dotted") +
geom_vline(xintercept = 20, color = "red", linetype = "dashed", size = 1) +  # conservative cutoff for aphantasia
theme_bw()
VVIQData %>%
ggplot(aes(x = VVIQRaw, y = rt)) +
stat_summary(
fun = mean,
geom = "point",
color = "black",
size = 3
) +
stat_summary(
fun.data = mean_se, # Automatically calculates mean and SE
geom = "errorbar",
color = "black",
shape = 21,
size = 0.5
) +
labs(title = "Reaction Time across VVIQ scores",
y = "Response Time (ms)",
x = "VVIQ") +
geom_smooth(method="lm", se = FALSE, color = "black", linetype = "dotted") +
geom_vline(xintercept = 20, color = "red", linetype = "dashed", size = 1) +  # conservative cutoff for aphantasia
geom_vline(xintercept = 74, color = "red", linetype = "dashed", size = 1) +  # conservative cutoff for hyperaphantasia
theme_bw()
VVIQData %>%
ggplot(aes(x = VVIQRaw, y = rt)) +
stat_summary(
fun = mean,
geom = "point",
color = "black",
size = 3
) +
stat_summary(
fun.data = mean_se, # Automatically calculates mean and SE
geom = "errorbar",
color = "black",
shape = 21,
size = 0.5
) +
labs(title = "Reaction Time across VVIQ scores",
y = "Response Time (ms)",
x = "VVIQ") +
geom_smooth(method="lm", se = FALSE, color = "black", linetype = "dotted") +
geom_vline(xintercept = 20, color = "red", linetype = "dashed", size = 1) +  # conservative cutoff for aphantasia
geom_vline(xintercept = 74, color = "blue", linetype = "dashed", size = 1) +  # conservative cutoff for hyperaphantasia
theme_bw()
VVIQData %>%
ggplot(aes(x = VVIQRaw, y = rt)) +
stat_summary(
fun = mean,
geom = "point",
color = "black",
size = 3
) +
stat_summary(
fun.data = mean_se, # Automatically calculates mean and SE
geom = "errorbar",
color = "black",
shape = 21,
size = 0.5
) +
labs(title = "Reaction Time across VVIQ scores",
y = "Response Time (ms)",
x = "VVIQ",
caption = "Red line represents aphantasia cutoff, blue line represents hyperphantasia cutoff") +
geom_smooth(method="lm", se = FALSE, color = "black", linetype = "dotted") +
geom_vline(xintercept = 20, color = "red", linetype = "dashed", size = 1) +  # conservative cutoff for aphantasia
geom_vline(xintercept = 74, color = "blue", linetype = "dashed", size = 1) +  # conservative cutoff for hyperaphantasia
theme_bw()
reactionTimeandAccuracyTable %>%
ggplot(aes(x = angle, y = errorRate)) +
geom_point(color = "blue", size = 2) +
geom_errorbar(
aes(ymin = errorRate - seErrorRate, ymax = errorRate + seErrorRate),
width = 0.2,
color = "black"
) +
coord_cartesian(ylim = c(0, 30)) +
scale_y_continuous(
breaks = seq(from = 0, to = 30, by = 2),
labels = seq(from = 0, to = 30, by = 2),
expand = c(0, 0)
) +
labs(
title = "Error Rate across Angles",
y = "Error Rate (%)",
x = "Angle (deg)"
) +
geom_smooth(
method = "lm",
se = FALSE,
color = "black",
linetype = "dotted"
) +
theme_bw()
processed_data %>%
ggplot(aes(x = age, y = rt)) +
stat_summary(
fun = mean,
geom = "point",
color = "black",
size = 3
) +
stat_summary(
fun.data = mean_se, # Automatically calculates mean and SE
geom = "errorbar",
color = "black",
shape = 21,
size = 0.5
) +
labs(title = "Reaction Time across Age",
y = "Response Time (ms)",
x = "Age") +
geom_smooth(method="lm", se = FALSE, color = "black", linetype = "dotted") +
theme_bw()
processed_data %>%
ggplot(aes(x = handedness, y = rt)) +
stat_summary(
fun = mean,
geom = "point",
color = "black",
size = 3
) +
stat_summary(
fun.data = mean_se, # Automatically calculates mean and SE
geom = "errorbar",
color = "black",
shape = 21,
size = 0.5
) +
labs(title = "Reaction Time across Handedness",
y = "Response Time (ms)",
x = "Handedness") +
geom_smooth(method="lm", se = FALSE, color = "black", linetype = "dotted") +
theme_bw()
processed_data %>%
ggplot(aes(x = age, y = rt)) +
stat_summary(
fun = mean,
geom = "point",
color = "black",
size = 3
) +
stat_summary(
fun.data = mean_se, # Automatically calculates mean and SE
geom = "errorbar",
color = "black",
shape = 21,
size = 0.5
) +
labs(title = "Reaction Time across Age",
y = "Response Time (ms)",
x = "Age") +
geom_smooth(method="lm", se = FALSE, color = "black", linetype = "dotted") +
theme_bw()
processed_data %>%
ggplot(aes(x = gender, y = rt)) +
stat_summary(
fun = mean,
geom = "point",
color = "black",
size = 3
) +
stat_summary(
fun.data = mean_se, # Automatically calculates mean and SE
geom = "errorbar",
color = "black",
shape = 21,
size = 0.5
) +
labs(title = "Reaction Time across Gender",
y = "Response Time (ms)",
x = "Gender") +
geom_smooth(method="lm", se = FALSE, color = "black", linetype = "dotted") +
theme_bw()
processed_data %>%
ggplot(aes(x = gender, y = rt)) +
stat_summary(
fun = mean,
geom = "point",
color = "black",
size = 3
) +
stat_summary(
fun.data = mean_se, # Automatically calculates mean and SE
geom = "errorbar",
color = "black",
shape = 21,
size = 0.5
) +
labs(title = "Reaction Time across Gender",
y = "Response Time (ms)",
x = "Gender") +
theme_bw()
processed_data %>%
ggplot(aes(x = handedness, y = rt)) +
stat_summary(
fun = mean,
geom = "point",
color = "black",
size = 3
) +
stat_summary(
fun.data = mean_se, # Automatically calculates mean and SE
geom = "errorbar",
color = "black",
shape = 21,
size = 0.5
) +
labs(title = "Reaction Time across Handedness",
y = "Response Time (ms)",
x = "Handedness") +
theme_bw()
